{
  "openapi": "3.0.0",
  "info": {
    "title": "API сервер для проекта «Шесть городов (простой)». WIP",
    "version": "1.0.0",
    "description": "Список ресурсов и маршрутов сервера «Шесть городов (простой)»."
  },
  "tags": [
    {
      "name": "offers",
      "description": "Действия с предложениями."
    },
    {
      "name": "comments",
      "description": "Действия с комментариями."
    },
    {
      "name": "cities",
      "description": "Действия с городами"
    },
    {
      "name": "users",
      "description": "Действия с пользователем."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["users"],
        "summary": "Регистрация нового пользователя",
        "description": "Creates a new user with the given data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Пользователь успешно создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRdo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDtoObj"
                }
              }
            }
          },
          "409": {
            "description": "User with email «sample@sample.net» exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorObj"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "summary": "Авторизация пользователя",
        "description": "Auth a new user with the given data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Проверка состояния пользователя",
        "description": "Check user",
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/offers": {
      "get": {
        "summary": "Get all offers",
        "description": "Returns a list of all offers",
        "tags": ["offers"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Offer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new offer",
        "description": "Creates a new offer with the given data",
        "tags": ["offers"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Offer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/comments": {
      "get": {
        "summary": "Get all comments",
        "description": "Returns a list of all comments",
        "tags": ["comments"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new comment",
        "description": "Creates a new comment with the given data",
        "tags": ["comments"],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema": {
              "type": "string",
              "minLength": 10
            },
            "required": true,
            "description": "token key"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/cities": {
      "get": {
        "summary": "Get all cities",
        "description": "Returns a list of all cities",
        "tags": ["cities"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/City"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "maxLength": 15
          },
          "type": {
            "type": "string",
            "enum": ["default", "pro"]
          }
        },
        "required": ["email", "firstName", "password"],
        "additionalProperties": false
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "maxLength": 15
          }
        },
        "required": ["email", "password"]
      },
      "UserRdo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatarPath": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["default", "pro"]
          }
        }
      },
      "ServiceError": {
        "type": "string",
        "enum": [
          "VALIDATION_ERROR",
          "VALIDATION_ENTITY_ERROR",
          "COMMON_ERROR",
          "SERVICE_ERROR",
          "SYNTAX_ERROR"
        ]
      },
      "ValidationErrorField": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ErrorDtoObj": {
        "type": "object",
        "properties": {
          "serviceError": {
            "$ref": "#/components/schemas/ServiceError"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorField"
            }
          }
        }
      },
      "ErrorObj": {
        "type": "object",
        "properties": {
          "serviceError": {
            "$ref": "#/components/schemas/ServiceError"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array"
          }
        }
      }
    }
  }
}
